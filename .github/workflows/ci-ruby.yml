# Configuration for Ruby CI
# To force the execution of this workflow, add [run ruby] to your commit message
name: 'CI - Ruby'

on:
  workflow_dispatch:

  schedule:
    - cron: '35 9,21 * * *'

  push:

  pull_request:

jobs:
  check_workflow:
    permissions:
      contents: none
    uses: ./.github/workflows/should-workflow-run.yml
    with:
      bazel-target-prefix: '//rb'

  build:
    if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[rb]') == true }}
    needs: check_workflow
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [ 'selenium-devtools', 'selenium-webdriver' ]
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
      - name: Setup Bazel
        uses: p0deje/setup-bazel@0.2.0
        with:
          bazelisk-cache: true
          disk-cache: rb-${{ matrix.target }}
          external-cache: |
            name: rb-${{ matrix.target }}
            manifest:
              crates: rust/Cargo.Bazel.lock
              npm: package-lock.json
              pypi__pip: py/requirements_lock.txt
              rules_ruby_dist: rb/ruby_version.bzl
          repository-cache: true
      - name: Build Gems
        run: bazel build //rb:${{ matrix.target }}

  integration-test:
    if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run ruby]') == true }}
    needs: check_workflow
    runs-on: ${{ matrix.os }}
    name: ${{ format('{0}{1}-test ({2})', (matrix.remote && 'remote-' || ''), matrix.browser, matrix.os) }}
    strategy:
      fail-fast: false
      matrix:
        browser:
          - chrome
          - edge
          - firefox
        remote:
          - false
          - true
        os:
          - ubuntu-latest
          - windows-latest
        exclude:
          - browser: edge
            os: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v4
      - name: Setup Bazel
        uses: p0deje/setup-bazel@0.2.0
        with:
          bazelisk-cache: true
          disk-cache: rb-${{ matrix.browser }}-remote-${{ matrix.remote }}
          external-cache: |
            name: rb-${{ matrix.browser }}-remote-${{ matrix.remote }}
            manifest:
              crates: rust/Cargo.Bazel.lock
              npm: package-lock.json
              pypi__pip: py/requirements_lock.txt
              rules_ruby_dist: rb/ruby_version.bzl
          repository-cache: true
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
      - name: Setup Fluxbox
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get -y install fluxbox
      - name: Setup Chrome
        if: matrix.browser == 'chrome'
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable
      - name: Start XVFB
        if: matrix.os == 'ubuntu-latest'
        run: Xvfb :99 &
      - name: Start Fluxbox
        if: matrix.os == 'ubuntu-latest'
        run: fluxbox -display :99 &
      - name: Set resolution
        if: matrix.os == 'windows-latest'
        run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
      - name: Setup Edge
        if: matrix.browser == 'edge'
        uses: browser-actions/setup-edge@latest
        with:
          edge-version: stable
      - name: Run tests
        run: >
          bazel test
          --define browser=${{ matrix.browser }}
          --define remote=${{ matrix.remote }}
          --flaky_test_attempts 3
          --local_test_jobs 1
          //rb/spec/integration/...
        env:
          DISPLAY: :99

  docs:
    if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run ruby]') == true }}
    needs: check_workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v4
      - name: Setup Bazel
        uses: p0deje/setup-bazel@0.2.0
        with:
          bazelisk-cache: true
          disk-cache: rb-docs
          external-cache: |
            name: rb-docs
            manifest:
              crates: rust/Cargo.Bazel.lock
              npm: package-lock.json
              pypi__pip: py/requirements_lock.txt
              rules_ruby_dist: rb/ruby_version.bzl
          repository-cache: true
      - name: Run docs tests
        run: bazel run //rb:docs

  lint:
    if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run ruby]') == true }}
    needs: check_workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v4
      - name: Setup Bazel
        uses: p0deje/setup-bazel@0.2.0
        with:
          bazelisk-cache: true
          disk-cache: rb-lint
          external-cache: |
            name: rb-lint
            manifest:
              crates: rust/Cargo.Bazel.lock
              npm: package-lock.json
              pypi__pip: py/requirements_lock.txt
              rules_ruby_dist: rb/ruby_version.bzl
          repository-cache: true
      - name: Run lint tests
        run: bazel run //rb:lint

  unit-test:
    if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run ruby]') == true }}
    needs: check_workflow
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ruby: [ '2.7.6', '3.2.0', 'jruby-9.4.0.0', 'truffleruby-22.3.0' ]
        os: ['ubuntu-latest']
        include:
          - ruby: 2.7.6
            os: windows-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v4
      - name: Set Ruby version to ${{ matrix.ruby }}
        run: echo 'RUBY_VERSION = "${{ matrix.ruby }}"' > rb/ruby_version.bzl
      - name: Setup Bazel
        uses: p0deje/setup-bazel@0.2.0
        with:
          bazelisk-cache: true
          disk-cache: rb-unit-test-${{ matrix.ruby }}
          external-cache: |
            name: rb-unit-test-${{ matrix.ruby }}
            manifest:
              crates: rust/Cargo.Bazel.lock
              npm: package-lock.json
              pypi__pip: py/requirements_lock.txt
              rules_ruby_dist: rb/ruby_version.bzl
          repository-cache: true
      - name: Run unit tests
        run: bazel test //rb/spec/unit/...
